package voto;

import java.io.IOException;
import java.net.URL;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.ResourceBundle;

import data_manager.DataController;

import db_access.CandidatoDAO;
import db_access.CandidatoDAOIF;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.ChoiceBox;

import model.Candidato;
import model.Voto;

public class ElettoreSelectCandidatoPreferenziale extends MainController implements Initializable{
	private List<Voto> voteList;
	
	
	@FXML
	private Button back;
	
	@FXML 
	private Button conferma;
	
	@FXML
	private ChoiceBox<String> tuttiCandidati;
	
	@FXML
	private ChoiceBox<Integer> posizione;
	
	private Integer pesoMax;
	
	public void backAction(ActionEvent event) throws IOException{
		DataController.idElezioneSelezionata = null;
		System.out.println("pressed");
		App.setRoot("loginsuccess");
	}
	
	public void registraRisposta(ActionEvent event) throws IOException, SQLException{
		if (posizione.getItems().size() == 1){
			voteList.add(new Voto(DataController.idElezioneSelezionata, tuttiCandidati.getValue() ,pesoMax - posizione.getValue()));
			tuttiCandidati.getItems().remove(tuttiCandidati.getValue());
			posizione.getItems().remove(posizione.getValue());
			confermaVoto();
			cleanDataController();
			App.setRoot("login");
		}
		else if(posizione.getItems().size() > 1){
			voteList.add(new Voto(DataController.idElezioneSelezionata, tuttiCandidati.getValue() ,pesoMax - posizione.getValue()));
			tuttiCandidati.getItems().remove(tuttiCandidati.getValue());
			posizione.getItems().remove(posizione.getValue());
			tuttiCandidati.setValue(tuttiCandidati.getItems().get(0));
			posizione.setValue(posizione.getItems().get(0));
		}
		else{
			cleanDataController();
			App.setRoot("login");
		}
	}
	
	private void confermaVoto() throws SQLException{
		for(int i = 0; i < voteList.size(); i++){
			voteList.get(i).registra(DataController.elettore);
		}
	}

	public void initialize(URL arg0, ResourceBundle arg1) {
		
		List<Candidato> TuttiCandidati;
		try {
			TuttiCandidati = Candidato.getAllCandidato(DataController.idElezioneSelezionata);
			
		} catch (SQLException e){
			e.printStackTrace();
			return;
		}
		
		List<String> StringList  = new ArrayList<String>();
		for (int i = 0; i < TuttiCandidati.size() ; i++){
			StringList.add(TuttiCandidati.get(i).id);
		}
		
		System.out.println(StringList.toString());
		tuttiCandidati.setValue(StringList.get(0));
		tuttiCandidati.getItems().addAll(StringList);
		
		for(int i = 1 ; i <= StringList.size(); i++){
			posizione.getItems().add(i);
		}
		posizione.setValue(posizione.getItems().get(0));
		pesoMax = posizione.getItems().size() + 1;
		
		for(int i = 0 ; i < posizione.getItems().size() ; i++){
			System.out.println("posizione : " + posizione.getItems().get(i)+ " ha peso : " + (pesoMax - posizione.getItems().get(i)) );
		}
		voteList = new ArrayList<Voto>();
	}
	
	
}
